{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n    console.log('Sending request:', config.method, config.url, 'with token:', token);\n  } else {\n    console.warn('No token found in localStorage for request:', config.method, config.url);\n  }\n  return config;\n}, error => Promise.reject(error));\napi.interceptors.response.use(response => {\n  console.log('Response:', response.status, response.config.method, response.config.url, response.data);\n  return response.data; // Возвращаем response.data\n}, error => {\n  if (error.response) {\n    console.error('Error Response:', error.response.status, error.response.config.method, error.response.config.url, error.response.data);\n    if (error.response.status === 403) {\n      console.error('403 Forbidden:', error.response.data);\n      console.error('Token:', localStorage.getItem('token'));\n    }\n  } else {\n    console.error('Error:', error.message);\n  }\n  return Promise.reject(error);\n});\nexport const loginUser = loginData => api.post('/auth/login', loginData);\nexport const registerUser = registerData => api.post('/auth/register', registerData);\nexport const getBooks = () => api.get('/books');\nexport const getBookById = id => api.get(`/books/${id}`);\nexport const getCategories = () => api.get('/categories');\nexport const searchBooks = title => api.get(`/books/search?title=${title}`);\nexport const getAddresses = () => api.get('/addresses');\nexport const addAddress = addressData => api.post('/addresses', addressData);\nexport const createOrder = orderData => api.post('/orders', orderData);\nexport const getOrders = () => api.get('/orders');\nexport const createBook = bookData => api.post('/books', bookData);\nexport const updateBook = (id, bookData) => api.put(`/books/${id}`, bookData);\nexport const deleteBook = id => api.delete(`/books/${id}`);\nexport const createCategory = categoryData => api.post('/categories', categoryData);\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","console","log","method","url","warn","error","Promise","reject","response","status","data","message","loginUser","loginData","post","registerUser","registerData","getBooks","get","getBookById","id","getCategories","searchBooks","title","getAddresses","addAddress","addressData","createOrder","orderData","getOrders","createBook","bookData","updateBook","put","deleteBook","delete","createCategory","categoryData"],"sources":["E:/ZALUPA (3)/ZALUPA/ZALUPA/main-app/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:8080/api',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n      console.log('Sending request:', config.method, config.url, 'with token:', token);\r\n    } else {\r\n      console.warn('No token found in localStorage for request:', config.method, config.url);\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log('Response:', response.status, response.config.method, response.config.url, response.data);\r\n    return response.data; // Возвращаем response.data\r\n  },\r\n  (error) => {\r\n    if (error.response) {\r\n      console.error('Error Response:', error.response.status, error.response.config.method, error.response.config.url, error.response.data);\r\n      if (error.response.status === 403) {\r\n        console.error('403 Forbidden:', error.response.data);\r\n        console.error('Token:', localStorage.getItem('token'));\r\n      }\r\n    } else {\r\n      console.error('Error:', error.message);\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const loginUser = (loginData) => api.post('/auth/login', loginData);\r\nexport const registerUser = (registerData) => api.post('/auth/register', registerData);\r\nexport const getBooks = () => api.get('/books');\r\nexport const getBookById = (id) => api.get(`/books/${id}`);\r\nexport const getCategories = () => api.get('/categories');\r\nexport const searchBooks = (title) => api.get(`/books/search?title=${title}`);\r\nexport const getAddresses = () => api.get('/addresses');\r\nexport const addAddress = (addressData) => api.post('/addresses', addressData);\r\nexport const createOrder = (orderData) => api.post('/orders', orderData);\r\nexport const getOrders = () => api.get('/orders');\r\nexport const createBook = (bookData) => api.post('/books', bookData);\r\nexport const updateBook = (id, bookData) => api.put(`/books/${id}`, bookData);\r\nexport const deleteBook = (id) => api.delete(`/books/${id}`);\r\nexport const createCategory = (categoryData) => api.post('/categories', categoryData);\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}