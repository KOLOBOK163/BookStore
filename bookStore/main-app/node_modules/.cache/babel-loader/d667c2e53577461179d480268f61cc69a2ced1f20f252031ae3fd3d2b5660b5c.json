{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { getAllWarehouses } from '../services/api';\nimport { toast } from 'react-toastify';\nexport const useWarehouses = () => {\n  _s();\n  const [warehouses, setWarehouses] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleError = (err, defaultMessage) => {\n    var _err$response, _err$response$data;\n    const message = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || defaultMessage;\n    setError(message);\n    toast.error(message);\n    throw err;\n  };\n  const fetchWarehouses = async () => {\n    setLoading(true);\n    try {\n      const response = await getAllWarehouses();\n      setWarehouses(response.data);\n    } catch (err) {\n      handleError(err, 'Ошибка загрузки складов');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchWarehouses();\n  }, []);\n  return {\n    warehouses,\n    fetchWarehouses,\n    loading,\n    error\n  };\n};\n_s(useWarehouses, \"nau5dpzzVznbwXYYhZWWP3XaGcQ=\");","map":{"version":3,"names":["useState","useEffect","getAllWarehouses","toast","useWarehouses","_s","warehouses","setWarehouses","loading","setLoading","error","setError","handleError","err","defaultMessage","_err$response","_err$response$data","message","response","data","fetchWarehouses"],"sources":["G:/Downloads/ZALUPA/ZALUPA/main-app/src/hooks/useWarehouses.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { getAllWarehouses } from '../services/api';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const useWarehouses = () => {\r\n  const [warehouses, setWarehouses] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleError = (err, defaultMessage) => {\r\n    const message = err.response?.data?.message || defaultMessage;\r\n    setError(message);\r\n    toast.error(message);\r\n    throw err;\r\n  };\r\n\r\n  const fetchWarehouses = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await getAllWarehouses();\r\n      setWarehouses(response.data);\r\n    } catch (err) {\r\n      handleError(err, 'Ошибка загрузки складов');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchWarehouses();\r\n  }, []);\r\n\r\n  return { warehouses, fetchWarehouses, loading, error };\r\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,gBAAgB,QAAQ,iBAAiB;AAClD,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMY,WAAW,GAAGA,CAACC,GAAG,EAAEC,cAAc,KAAK;IAAA,IAAAC,aAAA,EAAAC,kBAAA;IAC3C,MAAMC,OAAO,GAAG,EAAAF,aAAA,GAAAF,GAAG,CAACK,QAAQ,cAAAH,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcI,IAAI,cAAAH,kBAAA,uBAAlBA,kBAAA,CAAoBC,OAAO,KAAIH,cAAc;IAC7DH,QAAQ,CAACM,OAAO,CAAC;IACjBd,KAAK,CAACO,KAAK,CAACO,OAAO,CAAC;IACpB,MAAMJ,GAAG;EACX,CAAC;EAED,MAAMO,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClCX,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMS,QAAQ,GAAG,MAAMhB,gBAAgB,CAAC,CAAC;MACzCK,aAAa,CAACW,QAAQ,CAACC,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAON,GAAG,EAAE;MACZD,WAAW,CAACC,GAAG,EAAE,yBAAyB,CAAC;IAC7C,CAAC,SAAS;MACRJ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDR,SAAS,CAAC,MAAM;IACdmB,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEd,UAAU;IAAEc,eAAe;IAAEZ,OAAO;IAAEE;EAAM,CAAC;AACxD,CAAC;AAACL,EAAA,CA7BWD,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}