{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/api',\n  // Убедитесь, что порт совпадает\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: 10000\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n    console.log('Sending token:', token);\n  } else {\n    console.warn('No token found in localStorage');\n  }\n  return config;\n}, error => Promise.reject(error));\napi.interceptors.response.use(response => response, error => {\n  if (error.response && error.response.status === 403) {\n    console.error('Token might be expired or invalid:', localStorage.getItem('token'));\n  }\n  return Promise.reject(error);\n});\nexport const loginUser = loginData => api.post('/auth/login', loginData);\nexport const registerUser = registerData => api.post('/auth/register', registerData);\nexport const getBooks = () => api.get('/books');\nexport const getBookById = id => api.get(`/books/${id}`);\nexport const getCategories = () => api.get('/books/categories');\nexport const searchBooks = title => api.get(`/books/search?title=${title}`);\nexport const getAddresses = () => api.get('/addresses');\nexport const addAddress = addressData => api.post('/addresses', addressData);\nexport const createOrder = orderData => api.post('/orders', orderData);\nexport const getOrders = () => api.get('/orders');\nexport const createBook = bookData => api.post('/books', bookData);\nexport const updateBook = (id, bookData) => api.put(`/books/${id}`, bookData);\nexport const deleteBook = id => api.delete(`/books/${id}`);\nexport const deductStock = (bookId, quantity) => api.post(`/books/deduct-stock?bookId=${bookId}&quantity=${quantity}`);\nexport const distributeBook = (bookId, warehouseId, stock) => api.post('/books/distribute', {\n  bookId,\n  warehouseId,\n  stock\n});\nexport const getAllWarehouses = () => api.get('/warehouses');\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","timeout","interceptors","request","use","config","token","localStorage","getItem","Authorization","console","log","warn","error","Promise","reject","response","status","loginUser","loginData","post","registerUser","registerData","getBooks","get","getBookById","id","getCategories","searchBooks","title","getAddresses","addAddress","addressData","createOrder","orderData","getOrders","createBook","bookData","updateBook","put","deleteBook","delete","deductStock","bookId","quantity","distributeBook","warehouseId","stock","getAllWarehouses"],"sources":["G:/Downloads/ZALUPA/ZALUPA/main-app/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:8080/api', // Убедитесь, что порт совпадает\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  timeout: 10000,\r\n});\r\n\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n    console.log('Sending token:', token);\r\n  } else {\r\n    console.warn('No token found in localStorage');\r\n  }\r\n  return config;\r\n}, (error) => Promise.reject(error));\r\n\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response && error.response.status === 403) {\r\n      console.error('Token might be expired or invalid:', localStorage.getItem('token'));\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const loginUser = (loginData) => api.post('/auth/login', loginData);\r\nexport const registerUser = (registerData) => api.post('/auth/register', registerData);\r\nexport const getBooks = () => api.get('/books');\r\nexport const getBookById = (id) => api.get(`/books/${id}`);\r\nexport const getCategories = () => api.get('/books/categories');\r\nexport const searchBooks = (title) => api.get(`/books/search?title=${title}`);\r\nexport const getAddresses = () => api.get('/addresses');\r\nexport const addAddress = (addressData) => api.post('/addresses', addressData);\r\nexport const createOrder = (orderData) => api.post('/orders', orderData);\r\nexport const getOrders = () => api.get('/orders');\r\nexport const createBook = (bookData) => api.post('/books', bookData);\r\nexport const updateBook = (id, bookData) => api.put(`/books/${id}`, bookData);\r\nexport const deleteBook = (id) => api.delete(`/books/${id}`);\r\nexport const deductStock = (bookId, quantity) => api.post(`/books/deduct-stock?bookId=${bookId}&quantity=${quantity}`);\r\nexport const distributeBook = (bookId, warehouseId, stock) => api.post('/books/distribute', { bookId, warehouseId, stock });\r\nexport const getAllWarehouses = () => api.get('/warehouses');\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}