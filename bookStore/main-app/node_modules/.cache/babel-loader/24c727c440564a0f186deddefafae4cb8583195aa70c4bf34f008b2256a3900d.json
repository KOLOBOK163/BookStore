{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { getBooks, getBookById, searchBooks, getCategories, createBook, distributeBook, deductStock } from '../services/api';\nimport { toast } from 'react-toastify';\nexport const useBooks = () => {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleError = (err, defaultMessage) => {\n    var _err$response, _err$response$data;\n    const message = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message || defaultMessage;\n    setError(message);\n    toast.error(message);\n    return message;\n  };\n  const fetchBooks = async () => {\n    setLoading(true);\n    try {\n      const response = await getBooks();\n      setBooks(response.data);\n      setError(null);\n    } catch (err) {\n      handleError(err, 'Ошибка загрузки книг');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchBookById = async id => {\n    setLoading(true);\n    try {\n      const response = await getBookById(id);\n      setError(null);\n      return response.data;\n    } catch (err) {\n      handleError(err, 'Ошибка загрузки книги');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchCategories = async () => {\n    setLoading(true);\n    try {\n      const response = await getCategories();\n      setCategories(response.data);\n      setError(null);\n    } catch (err) {\n      handleError(err, 'Ошибка загрузки категорий');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const search = async title => {\n    setLoading(true);\n    try {\n      const response = await searchBooks(title);\n      setBooks(response.data);\n      setError(null);\n    } catch (err) {\n      handleError(err, 'Ошибка поиска');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const createBook = async bookData => {\n    setLoading(true);\n    try {\n      console.log('Отправляем данные на сервер:', bookData); // Отладка\n      const response = await createBook(bookData);\n      toast.success('Книга успешно добавлена!');\n      await fetchBooks();\n      setError(null);\n      return response.data;\n    } catch (err) {\n      const message = handleError(err, 'Ошибка добавления книги');\n      throw new Error(message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const distributeBookToWarehouse = async (bookId, warehouseId, stock) => {\n    setLoading(true);\n    try {\n      await distributeBook(bookId, warehouseId, stock);\n      toast.success('Книга успешно распределена!');\n      await fetchBooks();\n      setError(null);\n    } catch (err) {\n      handleError(err, 'Ошибка распределения книги');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const deductBookStock = async (bookId, quantity) => {\n    setLoading(true);\n    try {\n      await deductStock(bookId, quantity);\n      toast.success('Запас успешно вычтен!');\n      await fetchBooks();\n      setError(null);\n    } catch (err) {\n      handleError(err, 'Ошибка вычитания запаса');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchCategories();\n    fetchBooks();\n  }, []);\n\n  // Очистка ошибки через 5 секунд\n  useEffect(() => {\n    if (error) {\n      const timer = setTimeout(() => setError(null), 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [error]);\n  return {\n    books,\n    categories,\n    fetchBooks,\n    fetchBookById,\n    fetchCategories,\n    search,\n    createBook,\n    distributeBookToWarehouse,\n    deductBookStock,\n    loading,\n    error\n  };\n};\n_s(useBooks, \"gE79LVOj4WjXJ9xKi0x9csi3Dgk=\");","map":{"version":3,"names":["useState","useEffect","getBooks","getBookById","searchBooks","getCategories","createBook","distributeBook","deductStock","toast","useBooks","_s","books","setBooks","categories","setCategories","loading","setLoading","error","setError","handleError","err","defaultMessage","_err$response","_err$response$data","message","response","data","fetchBooks","fetchBookById","id","fetchCategories","search","title","bookData","console","log","success","Error","distributeBookToWarehouse","bookId","warehouseId","stock","deductBookStock","quantity","timer","setTimeout","clearTimeout"],"sources":["G:/Downloads/ZALUPA/ZALUPA/main-app/src/hooks/useBooks.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { getBooks, getBookById, searchBooks, getCategories, createBook, distributeBook, deductStock } from '../services/api';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const useBooks = () => {\r\n  const [books, setBooks] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleError = (err, defaultMessage) => {\r\n    const message = err.response?.data?.message || err.message || defaultMessage;\r\n    setError(message);\r\n    toast.error(message);\r\n    return message;\r\n  };\r\n\r\n  const fetchBooks = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await getBooks();\r\n      setBooks(response.data);\r\n      setError(null);\r\n    } catch (err) {\r\n      handleError(err, 'Ошибка загрузки книг');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchBookById = async (id) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await getBookById(id);\r\n      setError(null);\r\n      return response.data;\r\n    } catch (err) {\r\n      handleError(err, 'Ошибка загрузки книги');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchCategories = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await getCategories();\r\n      setCategories(response.data);\r\n      setError(null);\r\n    } catch (err) {\r\n      handleError(err, 'Ошибка загрузки категорий');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const search = async (title) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await searchBooks(title);\r\n      setBooks(response.data);\r\n      setError(null);\r\n    } catch (err) {\r\n      handleError(err, 'Ошибка поиска');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const createBook = async (bookData) => {\r\n    setLoading(true);\r\n    try {\r\n      console.log('Отправляем данные на сервер:', bookData); // Отладка\r\n      const response = await createBook(bookData);\r\n      toast.success('Книга успешно добавлена!');\r\n      await fetchBooks();\r\n      setError(null);\r\n      return response.data;\r\n    } catch (err) {\r\n      const message = handleError(err, 'Ошибка добавления книги');\r\n      throw new Error(message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const distributeBookToWarehouse = async (bookId, warehouseId, stock) => {\r\n    setLoading(true);\r\n    try {\r\n      await distributeBook(bookId, warehouseId, stock);\r\n      toast.success('Книга успешно распределена!');\r\n      await fetchBooks();\r\n      setError(null);\r\n    } catch (err) {\r\n      handleError(err, 'Ошибка распределения книги');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const deductBookStock = async (bookId, quantity) => {\r\n    setLoading(true);\r\n    try {\r\n      await deductStock(bookId, quantity);\r\n      toast.success('Запас успешно вычтен!');\r\n      await fetchBooks();\r\n      setError(null);\r\n    } catch (err) {\r\n      handleError(err, 'Ошибка вычитания запаса');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCategories();\r\n    fetchBooks();\r\n  }, []);\r\n\r\n  // Очистка ошибки через 5 секунд\r\n  useEffect(() => {\r\n    if (error) {\r\n      const timer = setTimeout(() => setError(null), 5000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [error]);\r\n\r\n  return { books, categories, fetchBooks, fetchBookById, fetchCategories, search, createBook, distributeBookToWarehouse, deductBookStock, loading, error };\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}