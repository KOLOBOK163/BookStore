{"ast":null,"code":"var _jsxFileName = \"F:\\\\bookStore\\\\bookStore\\\\main-app\\\\src\\\\context\\\\authContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useMemo } from 'react';\nimport { toast } from 'react-toastify';\nimport { getCustomerProfile } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('user')) || null);\n  const [cart, setCart] = useState(JSON.parse(localStorage.getItem('cart')) || []);\n  useEffect(() => {\n    localStorage.setItem('token', token || '');\n    localStorage.setItem('user', JSON.stringify(user) || '');\n    localStorage.setItem('cart', JSON.stringify(cart));\n    console.log('User updated in AuthProvider:', user);\n  }, [token, user, cart]);\n  const addToCart = book => {\n    const existingItem = cart.find(item => item.id === book.id);\n    if (existingItem) {\n      setCart(cart.map(item => item.id === book.id ? {\n        ...item,\n        quantity: item.quantity + 1\n      } : item));\n    } else {\n      setCart([...cart, {\n        ...book,\n        quantity: 1\n      }]);\n    }\n    toast.success(`${book.title} добавлен в корзину!`);\n  };\n  const refreshUser = async () => {\n    if (!token) {\n      console.warn('No token available to refresh user.');\n      return;\n    }\n    try {\n      const updatedUser = await getCustomerProfile();\n      setUser(updatedUser);\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      console.log('User refreshed successfully:', updatedUser);\n    } catch (err) {\n      var _err$response, _err$response2;\n      console.error('Error refreshing user:', err);\n      if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) {\n        // Токен недействителен или истек\n        logout();\n        toast.error('Сессия истекла. Пожалуйста, войдите снова.');\n      } else if (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === 403) {\n        // Ошибка доступа, но не выходим сразу\n        toast.error('Ошибка доступа. Пожалуйста, попробуйте снова или войдите заново.');\n      } else {\n        toast.error('Ошибка при обновлении данных пользователя.');\n      }\n    }\n  };\n  const removeFromCart = bookId => {\n    setCart(cart.filter(item => item.id !== bookId));\n    toast.info('Товар удалён из корзины.');\n  };\n  const updateCartQuantity = (bookId, quantity) => {\n    if (quantity <= 0) {\n      removeFromCart(bookId);\n      return;\n    }\n    setCart(cart.map(item => item.id === bookId ? {\n      ...item,\n      quantity\n    } : item));\n  };\n  const clearCart = () => {\n    setCart([]);\n    toast.info('Корзина очищена.');\n  };\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    setCart([]);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    localStorage.removeItem('cart');\n    toast.success('Вы вышли из системы.');\n  };\n  const value = useMemo(() => ({\n    token,\n    setToken,\n    user,\n    setUser,\n    cart,\n    addToCart,\n    removeFromCart,\n    updateCartQuantity,\n    clearCart,\n    logout,\n    refreshUser\n  }), [token, user, cart]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthProvider, \"edAacdw1pEnBIS1t8T4OaMD9NIU=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useMemo","toast","getCustomerProfile","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","token","setToken","localStorage","getItem","user","setUser","JSON","parse","cart","setCart","setItem","stringify","console","log","addToCart","book","existingItem","find","item","id","map","quantity","success","title","refreshUser","warn","updatedUser","err","_err$response","_err$response2","error","response","status","logout","removeFromCart","bookId","filter","info","updateCartQuantity","clearCart","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/bookStore/bookStore/main-app/src/context/authContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect, useMemo } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { getCustomerProfile } from '../services/api';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('user')) || null);\r\n  const [cart, setCart] = useState(JSON.parse(localStorage.getItem('cart')) || []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('token', token || '');\r\n    localStorage.setItem('user', JSON.stringify(user) || '');\r\n    localStorage.setItem('cart', JSON.stringify(cart));\r\n    console.log('User updated in AuthProvider:', user);\r\n  }, [token, user, cart]);\r\n\r\n  const addToCart = (book) => {\r\n    const existingItem = cart.find((item) => item.id === book.id);\r\n    if (existingItem) {\r\n      setCart(\r\n        cart.map((item) =>\r\n          item.id === book.id ? { ...item, quantity: item.quantity + 1 } : item\r\n        )\r\n      );\r\n    } else {\r\n      setCart([...cart, { ...book, quantity: 1 }]);\r\n    }\r\n    toast.success(`${book.title} добавлен в корзину!`);\r\n  };\r\n\r\n  const refreshUser = async () => {\r\n    if (!token) {\r\n      console.warn('No token available to refresh user.');\r\n      return;\r\n    }\r\n    try {\r\n      const updatedUser = await getCustomerProfile();\r\n      setUser(updatedUser);\r\n      localStorage.setItem('user', JSON.stringify(updatedUser));\r\n      console.log('User refreshed successfully:', updatedUser);\r\n    } catch (err) {\r\n      console.error('Error refreshing user:', err);\r\n      if (err.response?.status === 401) {\r\n        // Токен недействителен или истек\r\n        logout();\r\n        toast.error('Сессия истекла. Пожалуйста, войдите снова.');\r\n      } else if (err.response?.status === 403) {\r\n        // Ошибка доступа, но не выходим сразу\r\n        toast.error('Ошибка доступа. Пожалуйста, попробуйте снова или войдите заново.');\r\n      } else {\r\n        toast.error('Ошибка при обновлении данных пользователя.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const removeFromCart = (bookId) => {\r\n    setCart(cart.filter((item) => item.id !== bookId));\r\n    toast.info('Товар удалён из корзины.');\r\n  };\r\n\r\n  const updateCartQuantity = (bookId, quantity) => {\r\n    if (quantity <= 0) {\r\n      removeFromCart(bookId);\r\n      return;\r\n    }\r\n    setCart(\r\n      cart.map((item) =>\r\n        item.id === bookId ? { ...item, quantity } : item\r\n      )\r\n    );\r\n  };\r\n\r\n  const clearCart = () => {\r\n    setCart([]);\r\n    toast.info('Корзина очищена.');\r\n  };\r\n\r\n  const logout = () => {\r\n    setToken(null);\r\n    setUser(null);\r\n    setCart([]);\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('cart');\r\n    toast.success('Вы вышли из системы.');\r\n  };\r\n\r\n  const value = useMemo(\r\n    () => ({\r\n      token,\r\n      setToken,\r\n      user,\r\n      setUser,\r\n      cart,\r\n      addToCart,\r\n      removeFromCart,\r\n      updateCartQuantity,\r\n      clearCart,\r\n      logout,\r\n      refreshUser,\r\n    }),\r\n    [token, user, cart]\r\n  );\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}