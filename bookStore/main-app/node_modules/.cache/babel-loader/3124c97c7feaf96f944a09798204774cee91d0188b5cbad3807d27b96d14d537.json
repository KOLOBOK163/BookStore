{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { getCategories, createCategory } from '../services/api';\nimport { toast } from 'react-toastify';\nexport const useCategory = () => {\n  _s();\n  const [categories, setCategories] = useState([]); // Переименовали category в categories для ясности\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleError = (err, defaultMessage) => {\n    var _err$response, _err$response$data;\n    const message = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || defaultMessage;\n    setError(message);\n    toast.error(message);\n    throw err;\n  };\n  const fetchCategories = async () => {\n    setLoading(true);\n    try {\n      const response = await getCategories();\n      setCategories(response.data);\n    } catch (err) {\n      handleError(err, 'Ошибка загрузки категорий');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const createCategory = async categoryData => {\n    setLoading(true);\n    try {\n      const response = await createCategory(categoryData);\n      setCategories([...categories, response.data]);\n      toast.success('Категория успешно добавлена!');\n      return response.data;\n    } catch (err) {\n      handleError(err, 'Ошибка добавления категории');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n  return {\n    categories,\n    setCategories,\n    fetchCategories,\n    createCategory,\n    loading,\n    error\n  };\n};\n_s(useCategory, \"g1A7I/nRi3rMyLRSwZ1ZdL145oQ=\");","map":{"version":3,"names":["useState","useEffect","getCategories","createCategory","toast","useCategory","_s","categories","setCategories","error","setError","loading","setLoading","handleError","err","defaultMessage","_err$response","_err$response$data","message","response","data","fetchCategories","categoryData","success"],"sources":["E:/ZALUPA (3)/ZALUPA/ZALUPA/main-app/src/hooks/useCategory.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { getCategories, createCategory } from '../services/api';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const useCategory = () => {\r\n  const [categories, setCategories] = useState([]); // Переименовали category в categories для ясности\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleError = (err, defaultMessage) => {\r\n    const message = err.response?.data?.message || defaultMessage;\r\n    setError(message);\r\n    toast.error(message);\r\n    throw err;\r\n  };\r\n\r\n  const fetchCategories = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await getCategories();\r\n      setCategories(response.data);\r\n    } catch (err) {\r\n      handleError(err, 'Ошибка загрузки категорий');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const createCategory = async (categoryData) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await createCategory(categoryData);\r\n      setCategories([...categories, response.data]);\r\n      toast.success('Категория успешно добавлена!');\r\n      return response.data;\r\n    } catch (err) {\r\n      handleError(err, 'Ошибка добавления категории');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  return { categories, setCategories, fetchCategories, createCategory, loading, error };\r\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,aAAa,EAAEC,cAAc,QAAQ,iBAAiB;AAC/D,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAClD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMa,WAAW,GAAGA,CAACC,GAAG,EAAEC,cAAc,KAAK;IAAA,IAAAC,aAAA,EAAAC,kBAAA;IAC3C,MAAMC,OAAO,GAAG,EAAAF,aAAA,GAAAF,GAAG,CAACK,QAAQ,cAAAH,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcI,IAAI,cAAAH,kBAAA,uBAAlBA,kBAAA,CAAoBC,OAAO,KAAIH,cAAc;IAC7DL,QAAQ,CAACQ,OAAO,CAAC;IACjBd,KAAK,CAACK,KAAK,CAACS,OAAO,CAAC;IACpB,MAAMJ,GAAG;EACX,CAAC;EAED,MAAMO,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClCT,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMjB,aAAa,CAAC,CAAC;MACtCM,aAAa,CAACW,QAAQ,CAACC,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAON,GAAG,EAAE;MACZD,WAAW,CAACC,GAAG,EAAE,2BAA2B,CAAC;IAC/C,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMT,cAAc,GAAG,MAAOmB,YAAY,IAAK;IAC7CV,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMhB,cAAc,CAACmB,YAAY,CAAC;MACnDd,aAAa,CAAC,CAAC,GAAGD,UAAU,EAAEY,QAAQ,CAACC,IAAI,CAAC,CAAC;MAC7ChB,KAAK,CAACmB,OAAO,CAAC,8BAA8B,CAAC;MAC7C,OAAOJ,QAAQ,CAACC,IAAI;IACtB,CAAC,CAAC,OAAON,GAAG,EAAE;MACZD,WAAW,CAACC,GAAG,EAAE,6BAA6B,CAAC;IACjD,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDX,SAAS,CAAC,MAAM;IACdoB,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEd,UAAU;IAAEC,aAAa;IAAEa,eAAe;IAAElB,cAAc;IAAEQ,OAAO;IAAEF;EAAM,CAAC;AACvF,CAAC;AAACH,EAAA,CA3CWD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}