{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { getBooks, getBookById, searchBooks, createBook as createBookApi, updateBook as updateBookApi, deleteBook as deleteBookApi, createDiscount as createDiscountApi, updateDiscount as updateDiscountApi, deleteDiscount as deleteDiscountApi, getDiscountsForBook as getDiscountsForBookApi } from '../services/api';\nimport { toast } from 'react-toastify';\nexport const useBooks = () => {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [discountCache, setDiscountCache] = useState({});\n  const handleError = (err, defaultMessage) => {\n    var _err$response, _err$response$data;\n    const message = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || defaultMessage;\n    setError(message);\n    toast.error(message);\n    return Promise.reject(err); // Возвращаем отклонённый промис\n  };\n  const fetchBooks = async () => {\n    setLoading(true);\n    try {\n      const response = await getBooks();\n      if (Array.isArray(response)) {\n        setBooks(response);\n      } else {\n        setBooks([]);\n        console.warn('Unexpected response format:', response);\n      }\n    } catch (err) {\n      handleError(err, 'Ошибка загрузки книг');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchBookById = async id => {\n    setLoading(true);\n    try {\n      const response = await getBookById(id);\n      console.log('Fetch Book By Id Response:', response);\n      return response;\n    } catch (err) {\n      handleError(err, 'Ошибка загрузки книги');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const search = async title => {\n    setLoading(true);\n    try {\n      const response = await searchBooks(title);\n      console.log('Search Books Response:', response);\n      if (Array.isArray(response)) {\n        setBooks(response);\n      } else {\n        setBooks([]);\n        console.warn('Unexpected response format:', response);\n      }\n    } catch (err) {\n      handleError(err, 'Ошибка поиска');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const createBook = async (bookData, coverImage) => {\n    setLoading(true);\n    try {\n      const response = await createBookApi(bookData, coverImage);\n      console.log('Create Book Response:', response);\n      if (response && response.id) {\n        setBooks(prevBooks => [...prevBooks, response]);\n        toast.success('Книга успешно добавлена!');\n        return response;\n      } else {\n        throw new Error('Некорректный ответ от сервера');\n      }\n    } catch (err) {\n      handleError(err, 'Ошибка добавления книги');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateBook = async (id, bookData, coverImage) => {\n    setLoading(true);\n    try {\n      const response = await updateBookApi(id, bookData, coverImage);\n      console.log('Update Book Response:', response);\n      if (response && response.id) {\n        setBooks(prevBooks => prevBooks.map(book => book.id === response.id ? response : book));\n        toast.success('Книга успешно обновлена!');\n        return response;\n      } else {\n        throw new Error('Некорректный ответ от сервера');\n      }\n    } catch (err) {\n      handleError(err, 'Ошибка обновления книги');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const deleteBook = async id => {\n    setLoading(true);\n    try {\n      await deleteBookApi(id);\n      console.log('Delete Book Success:', id);\n      setBooks(prevBooks => prevBooks.filter(book => book.id !== id));\n      toast.success('Книга успешно удалена!');\n    } catch (err) {\n      handleError(err, 'Ошибка удаления книги');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const createDiscount = async (bookId, discountData) => {\n    setLoading(true);\n    try {\n      const response = await createDiscountApi(bookId, discountData);\n      toast.success('Скидка успешно добавлена!');\n      await fetchBooks(); // Обновляем список книг после добавления скидки\n      return response;\n    } catch (err) {\n      handleError(err, 'Ошибка добавления скидки');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateDiscount = async (id, discountData) => {\n    setLoading(true);\n    try {\n      const response = await updateDiscountApi(id, discountData);\n      toast.success('Скидка успешно обновлена!');\n      await fetchBooks(); // Обновляем список книг после обновления скидки\n      return response;\n    } catch (err) {\n      handleError(err, 'Ошибка обновления скидки');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const deleteDiscount = async id => {\n    setLoading(true);\n    try {\n      await deleteDiscountApi(id);\n      toast.success('Скидка успешно удалена!');\n      await fetchBooks(); // Обновляем список книг после удаления скидки\n    } catch (err) {\n      handleError(err, 'Ошибка удаления скидки');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getDiscountsForBook = async bookId => {\n    setLoading(true);\n    try {\n      const response = await getDiscountsForBookApi(bookId);\n      return response;\n    } catch (err) {\n      handleError(err, 'Ошибка загрузки скидок');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchBooks();\n  }, []);\n  return {\n    books,\n    fetchBooks,\n    fetchBookById,\n    search,\n    createBook,\n    updateBook,\n    deleteBook,\n    createDiscount,\n    updateDiscount,\n    deleteDiscount,\n    getDiscountsForBook,\n    loading,\n    error\n  };\n};\n_s(useBooks, \"phFY1afyL3ucpI99MgJnE8Fk2bc=\");","map":{"version":3,"names":["useState","useEffect","getBooks","getBookById","searchBooks","createBook","createBookApi","updateBook","updateBookApi","deleteBook","deleteBookApi","createDiscount","createDiscountApi","updateDiscount","updateDiscountApi","deleteDiscount","deleteDiscountApi","getDiscountsForBook","getDiscountsForBookApi","toast","useBooks","_s","books","setBooks","loading","setLoading","error","setError","discountCache","setDiscountCache","handleError","err","defaultMessage","_err$response","_err$response$data","message","response","data","Promise","reject","fetchBooks","Array","isArray","console","warn","fetchBookById","id","log","search","title","bookData","coverImage","prevBooks","success","Error","map","book","filter","bookId","discountData"],"sources":["G:/bookStore/bookStore/main-app/src/hooks/useBooks.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { getBooks, getBookById, searchBooks, createBook as createBookApi, updateBook as updateBookApi, deleteBook as deleteBookApi, createDiscount as createDiscountApi, updateDiscount as updateDiscountApi, deleteDiscount as deleteDiscountApi, getDiscountsForBook as getDiscountsForBookApi } from '../services/api';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const useBooks = () => {\r\n  const [books, setBooks] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [discountCache, setDiscountCache] = useState({});\r\n\r\n\r\n  const handleError = (err, defaultMessage) => {\r\n    const message = err.response?.data?.message || defaultMessage;\r\n    setError(message);\r\n    toast.error(message);\r\n    return Promise.reject(err); // Возвращаем отклонённый промис\r\n  };\r\n\r\n  const fetchBooks = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await getBooks();\r\n      if (Array.isArray(response)) {\r\n        setBooks(response);\r\n      } else {\r\n        setBooks([]);\r\n        console.warn('Unexpected response format:', response);\r\n      }\r\n    } catch (err) {\r\n      handleError(err, 'Ошибка загрузки книг');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchBookById = async (id) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await getBookById(id);\r\n      console.log('Fetch Book By Id Response:', response);\r\n      return response;\r\n    } catch (err) {\r\n      handleError(err, 'Ошибка загрузки книги');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const search = async (title) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await searchBooks(title);\r\n      console.log('Search Books Response:', response);\r\n      if (Array.isArray(response)) {\r\n        setBooks(response);\r\n      } else {\r\n        setBooks([]);\r\n        console.warn('Unexpected response format:', response);\r\n      }\r\n    } catch (err) {\r\n      handleError(err, 'Ошибка поиска');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const createBook = async (bookData, coverImage) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await createBookApi(bookData, coverImage);\r\n      console.log('Create Book Response:', response);\r\n      if (response && response.id) {\r\n        setBooks((prevBooks) => [...prevBooks, response]);\r\n        toast.success('Книга успешно добавлена!');\r\n        return response;\r\n      } else {\r\n        throw new Error('Некорректный ответ от сервера');\r\n      }\r\n    } catch (err) {\r\n      handleError(err, 'Ошибка добавления книги');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateBook = async (id, bookData, coverImage) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await updateBookApi(id, bookData, coverImage);\r\n      console.log('Update Book Response:', response);\r\n      if (response && response.id) {\r\n        setBooks((prevBooks) =>\r\n          prevBooks.map((book) => (book.id === response.id ? response : book))\r\n        );\r\n        toast.success('Книга успешно обновлена!');\r\n        return response;\r\n      } else {\r\n        throw new Error('Некорректный ответ от сервера');\r\n      }\r\n    } catch (err) {\r\n      handleError(err, 'Ошибка обновления книги');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const deleteBook = async (id) => {\r\n    setLoading(true);\r\n    try {\r\n      await deleteBookApi(id);\r\n      console.log('Delete Book Success:', id);\r\n      setBooks((prevBooks) => prevBooks.filter((book) => book.id !== id));\r\n      toast.success('Книга успешно удалена!');\r\n    } catch (err) {\r\n      handleError(err, 'Ошибка удаления книги');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const createDiscount = async (bookId, discountData) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await createDiscountApi(bookId, discountData);\r\n      toast.success('Скидка успешно добавлена!');\r\n      await fetchBooks(); // Обновляем список книг после добавления скидки\r\n      return response;\r\n    } catch (err) {\r\n      handleError(err, 'Ошибка добавления скидки');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateDiscount = async (id, discountData) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await updateDiscountApi(id, discountData);\r\n      toast.success('Скидка успешно обновлена!');\r\n      await fetchBooks(); // Обновляем список книг после обновления скидки\r\n      return response;\r\n    } catch (err) {\r\n      handleError(err, 'Ошибка обновления скидки');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const deleteDiscount = async (id) => {\r\n    setLoading(true);\r\n    try {\r\n      await deleteDiscountApi(id);\r\n      toast.success('Скидка успешно удалена!');\r\n      await fetchBooks(); // Обновляем список книг после удаления скидки\r\n    } catch (err) {\r\n      handleError(err, 'Ошибка удаления скидки');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getDiscountsForBook = async (bookId) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await getDiscountsForBookApi(bookId);\r\n      return response;\r\n    } catch (err) {\r\n      handleError(err, 'Ошибка загрузки скидок');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchBooks();\r\n  }, []);\r\n\r\n  return {\r\n    books,\r\n    fetchBooks,\r\n    fetchBookById,\r\n    search,\r\n    createBook,\r\n    updateBook,\r\n    deleteBook,\r\n    createDiscount,\r\n    updateDiscount,\r\n    deleteDiscount,\r\n    getDiscountsForBook,\r\n    loading,\r\n    error,\r\n  };\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}