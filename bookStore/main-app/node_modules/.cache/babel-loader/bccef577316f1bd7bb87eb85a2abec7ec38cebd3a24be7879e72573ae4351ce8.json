{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport const loginUser = loginData => api.post('/auth/login', loginData);\nexport const registerUser = registerData => api.post('/auth/register', registerData);\nexport const getBooks = () => api.get('/books');\nexport const getBookById = id => api.get(`/books/${id}`);\nexport const getCategories = () => api.get('/categories');\nexport const searchBooks = title => api.get(`/books/search?title=${title}`);\nexport const getAddresses = () => api.get('/addresses');\nexport const addAddress = addressData => api.post('/addresses', addressData);\nexport const createOrder = orderData => api.post('/orders', orderData);\nexport const getOrders = () => api.get('/orders');\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","loginUser","loginData","post","registerUser","registerData","getBooks","get","getBookById","id","getCategories","searchBooks","title","getAddresses","addAddress","addressData","createOrder","orderData","getOrders"],"sources":["G:/Downloads/ZALUPA/ZALUPA/main-app/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:8080/api',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport const loginUser = (loginData) => api.post('/auth/login', loginData);\r\nexport const registerUser = (registerData) => api.post('/auth/register', registerData);\r\nexport const getBooks = () => api.get('/books');\r\nexport const getBookById = (id) => api.get(`/books/${id}`);\r\nexport const getCategories = () => api.get('/categories');\r\nexport const searchBooks = (title) => api.get(`/books/search?title=${title}`);\r\nexport const getAddresses = () => api.get('/addresses');\r\nexport const addAddress = (addressData) => api.post('/addresses', addressData);\r\nexport const createOrder = (orderData) => api.post('/orders', orderData);\r\nexport const getOrders = () => api.get('/orders');\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,2BAA2B;EACpCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEFH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,OAAO,MAAMK,SAAS,GAAIC,SAAS,IAAKb,GAAG,CAACc,IAAI,CAAC,aAAa,EAAED,SAAS,CAAC;AAC1E,OAAO,MAAME,YAAY,GAAIC,YAAY,IAAKhB,GAAG,CAACc,IAAI,CAAC,gBAAgB,EAAEE,YAAY,CAAC;AACtF,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAMjB,GAAG,CAACkB,GAAG,CAAC,QAAQ,CAAC;AAC/C,OAAO,MAAMC,WAAW,GAAIC,EAAE,IAAKpB,GAAG,CAACkB,GAAG,CAAC,UAAUE,EAAE,EAAE,CAAC;AAC1D,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAMrB,GAAG,CAACkB,GAAG,CAAC,aAAa,CAAC;AACzD,OAAO,MAAMI,WAAW,GAAIC,KAAK,IAAKvB,GAAG,CAACkB,GAAG,CAAC,uBAAuBK,KAAK,EAAE,CAAC;AAC7E,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAMxB,GAAG,CAACkB,GAAG,CAAC,YAAY,CAAC;AACvD,OAAO,MAAMO,UAAU,GAAIC,WAAW,IAAK1B,GAAG,CAACc,IAAI,CAAC,YAAY,EAAEY,WAAW,CAAC;AAC9E,OAAO,MAAMC,WAAW,GAAIC,SAAS,IAAK5B,GAAG,CAACc,IAAI,CAAC,SAAS,EAAEc,SAAS,CAAC;AACxE,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM7B,GAAG,CAACkB,GAAG,CAAC,SAAS,CAAC;AAEjD,eAAelB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}