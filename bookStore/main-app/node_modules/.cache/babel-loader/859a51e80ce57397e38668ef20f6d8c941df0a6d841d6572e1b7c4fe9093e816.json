{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { getBooks, getBookById, searchBooks, getCategories, createBook as createBookApi, createCategory } from '../services/api';\nimport { toast } from 'react-toastify';\nexport const useBooks = () => {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleError = (err, defaultMessage) => {\n    var _err$response, _err$response$data;\n    const message = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || defaultMessage;\n    setError(message);\n    toast.error(message);\n    throw err;\n  };\n  useEffect(() => {\n    fetchBooks();\n    fetchCategories();\n  }, []);\n  const fetchBooks = async () => {\n    setLoading(true);\n    try {\n      const response = await getBooks();\n      setBooks(response.data);\n    } catch (err) {\n      handleError(err, 'Ошибка загрузки книг');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchBookById = async id => {\n    setLoading(true);\n    try {\n      const response = await getBookById(id);\n      const book = response.data;\n      return book;\n    } catch (err) {\n      handleError(err, 'Ошибка загрузки книги');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchCategories = async () => {\n    setLoading(true);\n    try {\n      const response = await getCategories();\n      setCategories(response.data);\n    } catch (err) {\n      handleError(err, 'Ошибка загрузки категорий');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const createCategory = async categoryData => {\n    setLoading(true);\n    try {\n      const response = await createCategory(categoryData);\n      setCategories([...categories, response.data]);\n      toast.success('Категория успешно добавлена!');\n      return response.data;\n    } catch (err) {\n      handleError(err, 'Ошибка добавления категории');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const search = async title => {\n    setLoading(true);\n    try {\n      const response = await searchBooks(title);\n      setBooks(response.data);\n    } catch (err) {\n      handleError(err, 'Ошибка поиска');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const createBook = async bookData => {\n    setLoading(true);\n    try {\n      const response = await createBookApi(bookData);\n      setBooks([...books, response.data]);\n      toast.success('Книга успешно добавлена!');\n      return response.data;\n    } catch (err) {\n      handleError(err, 'Ошибка добавления книги');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return {\n    books,\n    categories,\n    fetchBooks,\n    fetchBookById,\n    fetchCategories,\n    createCategory,\n    search,\n    createBook,\n    loading,\n    error\n  };\n};\n_s(useBooks, \"XCip0DTiyPXkItHzZoRZOGcPzqo=\");","map":{"version":3,"names":["useState","useEffect","getBooks","getBookById","searchBooks","getCategories","createBook","createBookApi","createCategory","toast","useBooks","_s","books","setBooks","categories","setCategories","loading","setLoading","error","setError","handleError","err","defaultMessage","_err$response","_err$response$data","message","response","data","fetchBooks","fetchCategories","fetchBookById","id","book","categoryData","success","search","title","bookData"],"sources":["E:/ZALUPA (3)/ZALUPA/ZALUPA/main-app/src/hooks/useBooks.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { getBooks, getBookById, searchBooks, getCategories, createBook as createBookApi, createCategory } from '../services/api';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const useBooks = () => {\r\n  const [books, setBooks] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleError = (err, defaultMessage) => {\r\n    const message = err.response?.data?.message || defaultMessage;\r\n    setError(message);\r\n    toast.error(message);\r\n    throw err;\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchBooks();\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  const fetchBooks = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await getBooks();\r\n      setBooks(response.data);\r\n    } catch (err) {\r\n      handleError(err, 'Ошибка загрузки книг');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchBookById = async (id) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await getBookById(id);\r\n      const book = response.data;\r\n      return book;\r\n    } catch (err) {\r\n      handleError(err, 'Ошибка загрузки книги');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchCategories = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await getCategories();\r\n      setCategories(response.data);\r\n    } catch (err) {\r\n      handleError(err, 'Ошибка загрузки категорий');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const createCategory = async (categoryData) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await createCategory(categoryData);\r\n      setCategories([...categories, response.data]);\r\n      toast.success('Категория успешно добавлена!');\r\n      return response.data;\r\n    } catch (err) {\r\n      handleError(err, 'Ошибка добавления категории');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const search = async (title) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await searchBooks(title);\r\n      setBooks(response.data);\r\n    } catch (err) {\r\n      handleError(err, 'Ошибка поиска');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const createBook = async (bookData) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await createBookApi(bookData);\r\n      setBooks([...books, response.data]);\r\n      toast.success('Книга успешно добавлена!');\r\n      return response.data;\r\n    } catch (err) {\r\n      handleError(err, 'Ошибка добавления книги');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return { books, categories, fetchBooks, fetchBookById, fetchCategories, createCategory, search, createBook, loading, error };\r\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,QAAQ,EAAEC,WAAW,EAAEC,WAAW,EAAEC,aAAa,EAAEC,UAAU,IAAIC,aAAa,EAAEC,cAAc,QAAQ,iBAAiB;AAChI,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMoB,WAAW,GAAGA,CAACC,GAAG,EAAEC,cAAc,KAAK;IAAA,IAAAC,aAAA,EAAAC,kBAAA;IAC3C,MAAMC,OAAO,GAAG,EAAAF,aAAA,GAAAF,GAAG,CAACK,QAAQ,cAAAH,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcI,IAAI,cAAAH,kBAAA,uBAAlBA,kBAAA,CAAoBC,OAAO,KAAIH,cAAc;IAC7DH,QAAQ,CAACM,OAAO,CAAC;IACjBhB,KAAK,CAACS,KAAK,CAACO,OAAO,CAAC;IACpB,MAAMJ,GAAG;EACX,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACd2B,UAAU,CAAC,CAAC;IACZC,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMD,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7BX,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMS,QAAQ,GAAG,MAAMxB,QAAQ,CAAC,CAAC;MACjCW,QAAQ,CAACa,QAAQ,CAACC,IAAI,CAAC;IACzB,CAAC,CAAC,OAAON,GAAG,EAAE;MACZD,WAAW,CAACC,GAAG,EAAE,sBAAsB,CAAC;IAC1C,CAAC,SAAS;MACRJ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMa,aAAa,GAAG,MAAOC,EAAE,IAAK;IAClCd,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMS,QAAQ,GAAG,MAAMvB,WAAW,CAAC4B,EAAE,CAAC;MACtC,MAAMC,IAAI,GAAGN,QAAQ,CAACC,IAAI;MAC1B,OAAOK,IAAI;IACb,CAAC,CAAC,OAAOX,GAAG,EAAE;MACZD,WAAW,CAACC,GAAG,EAAE,uBAAuB,CAAC;IAC3C,CAAC,SAAS;MACRJ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMY,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClCZ,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMS,QAAQ,GAAG,MAAMrB,aAAa,CAAC,CAAC;MACtCU,aAAa,CAACW,QAAQ,CAACC,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAON,GAAG,EAAE;MACZD,WAAW,CAACC,GAAG,EAAE,2BAA2B,CAAC;IAC/C,CAAC,SAAS;MACRJ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMT,cAAc,GAAG,MAAOyB,YAAY,IAAK;IAC7ChB,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMS,QAAQ,GAAG,MAAMlB,cAAc,CAACyB,YAAY,CAAC;MACnDlB,aAAa,CAAC,CAAC,GAAGD,UAAU,EAAEY,QAAQ,CAACC,IAAI,CAAC,CAAC;MAC7ClB,KAAK,CAACyB,OAAO,CAAC,8BAA8B,CAAC;MAC7C,OAAOR,QAAQ,CAACC,IAAI;IACtB,CAAC,CAAC,OAAON,GAAG,EAAE;MACZD,WAAW,CAACC,GAAG,EAAE,6BAA6B,CAAC;IACjD,CAAC,SAAS;MACRJ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMkB,MAAM,GAAG,MAAOC,KAAK,IAAK;IAC9BnB,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMS,QAAQ,GAAG,MAAMtB,WAAW,CAACgC,KAAK,CAAC;MACzCvB,QAAQ,CAACa,QAAQ,CAACC,IAAI,CAAC;IACzB,CAAC,CAAC,OAAON,GAAG,EAAE;MACZD,WAAW,CAACC,GAAG,EAAE,eAAe,CAAC;IACnC,CAAC,SAAS;MACRJ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMX,UAAU,GAAG,MAAO+B,QAAQ,IAAK;IACrCpB,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMS,QAAQ,GAAG,MAAMnB,aAAa,CAAC8B,QAAQ,CAAC;MAC9CxB,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEc,QAAQ,CAACC,IAAI,CAAC,CAAC;MACnClB,KAAK,CAACyB,OAAO,CAAC,0BAA0B,CAAC;MACzC,OAAOR,QAAQ,CAACC,IAAI;IACtB,CAAC,CAAC,OAAON,GAAG,EAAE;MACZD,WAAW,CAACC,GAAG,EAAE,yBAAyB,CAAC;IAC7C,CAAC,SAAS;MACRJ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,OAAO;IAAEL,KAAK;IAAEE,UAAU;IAAEc,UAAU;IAAEE,aAAa;IAAED,eAAe;IAAErB,cAAc;IAAE2B,MAAM;IAAE7B,UAAU;IAAEU,OAAO;IAAEE;EAAM,CAAC;AAC9H,CAAC;AAACP,EAAA,CAhGWD,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}